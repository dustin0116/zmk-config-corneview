/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
        behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//      | TO2 | SPC | SHFT |   | BSPC | RCTRL | TO1 |
                        bindings = <
   &kp Q  &kp W  &kp E  &kp R  &kp T   &kp Y  &kp U  &kp I  &td MINUS O  &kp P
   &kp A  &kp S  &kp D  &hm LGUI F  &kp G   &kp H  &hm RGUI J  &kp K  &kp L  &kp GRAVE
   &kp Z  &kp X  &kp C  &kp V  &kp B   &kp N  &kp M  &td UNDER COMMA  &td EXCL DOT  &kp FSLH
      &to 2  &kp SPACE  &kp LSHFT   &kp BSPC  &kp RCTL  &to 1
                        >;
                };
                right_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  :  | BSPC |
// | TAB |  =  |  ‘  |  ’  | SQT |   |  \  |  {  |  }  | "|" | RET  |
// |  ~  |  <  |  “  |  ”  | DQT |   |  [  |  (  |  )  |  ]  |  >   |
//             | TO0 |     | SPC |   | RET |     | TO2 |
                        bindings = <
   &kp ESC  &kp ATSN  &kp LS(N3)  &kp DLLR  &kp PRCNT   &kp CARET  &kp LS(COMMA)  &kp LS(DOT)  &kp COLON  &kp BSPC 
   &kp TAB  &kp EQUAL  &kp LA(RBKT)  &kp LA(LS(RBKT))  &kp SQT   &hm HOME BSLH  &hm PG_UP LBRC  &hm PG_DN RBRC  &hm END PIPE  &kp RET
   &kp TILDE  &kp LT  &kp LA(LBKT)  &kp LA(LS(LBKT))  &kp DQT   &kp LBKT &kp LPRN &kp RPRN &kp RBKT  &kp GT 
        &to 0  &trans  &kp LSHIFT   &kp RALT  &trans  &to 2
                        >;
                };

                left_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  1  |  PLAY  |  PAUSE |  _  |   |  -  |  7  |  8  |  9  |     |
// | TAB  |     | VOL_DN | VOL_UP |  +  |   |  =  |  4  |  5  |  6  | ENT |
// | TO4  |  &  |   /    |    *   |  .  |   |  0  |  1  |  2  |  3  |     |
//                    | TO0 |     | LGUI|   | RALT|     | TO3 |
                        bindings = <
   &kp ESC  &kp C_PP  &kp C_PREV  &kp C_NEXT  &kp LS(MINUS)   &kp MINUS  &kp N7 &kp N8 &kp N9 &trans
   &kp TAB  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL)   &kp EQUAL &kp N4  &kp N5  &kp N6  &kp RET
   &to 4  &kp AMPS  &kp SLASH  &kp STAR  &kp DOT   &kp N0 &kp N1 &kp N2 &kp N3  &trans 
        &to 0  &trans  &sk LGUI   &sk RALT  &trans  &to 3 
                        >;
                };

                mouse_layer {
// -----------------------------------------------------------------------------------------
// |     |SCROLL_LEFT| MOVE_UP |SCROLL_RIGHT|        |   | BACK| PREVTAB | NEXTTAB | FWRD| BSPC|
// |  F1 | MOVE_LEFT |MOVE_DOWN| MOVE_RIGHT | MCLICK |   | LFT |   DWN   |   UP    | RGT | RET |
// |  `  |   RCLICK  |SCROLL_UP| SCROLL_DOWN|        |   | LCLK|  PG_DN  |  PG_UP  |     |     |
//                                 | TO0 |     | SPC |   | RET |     | TO1 |
                       bindings = <
   &trans  &trans  &trans  &trans  &trans   &kp LG(LBKT)   &kp LC(LS(TAB))   &kp RC(TAB) &kp LG(RBKT) &kp BSPC
   &kp F1  &trans  &trans  &trans  &trans   &kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp RET 
   &td LG(GRAVE) GRAVE  &trans  &trans  &trans  &trans   &mkp LCLK &kp PG_DN  &kp PG_UP  &trans &trans   
        &to 0 &trans &kp SPACE   &sk RET &trans &to 1 
		        >;                        
                };

                bt {
		bindings = <
  &trans  &trans &trans &trans &trans &trans &trans &trans &trans &trans 
  &trans  &trans &trans &trans &trans &trans &trans &trans &trans &trans 
  &bt BT_PRV  &bt BT_NXT &bt BT_CLR &trans &trans   &trans &trans  &trans  &trans &trans   
        &to 0 &trans &trans   &trans  &trans &to 1 
		        >;
                };		
        };
};